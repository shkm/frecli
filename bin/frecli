#!/usr/bin/env ruby

require 'gli'
require 'frecli/table'
require 'frecli'

include GLI::App
include Frecli::Settings

program_desc 'Freckle CLI'

version Frecli::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Manage projects'
command [:project, :projects, :p] do |c|
  c.desc 'List all projects'
  c.command [:all, :a] do |all|
    all.action do
      puts Frecli::Table.vertical(
        Frecli.projects,
        [ 'ID', 'Name', 'Date created', 'Date updated' ],
        [ :id, :name, :created_at, :updated_at ]
      )
    end
  end

  c.desc 'Show a project'
  c.arg :id, :required
  c.command [:show, :s] do |show|
    show.action do |_, _, args|
      id = args[0]

      puts Frecli::Table.horizontal(
        Frecli.project(id),
        { ID: :id,
          Name: :name,
          Minutes: :minutes }
      )
    end
  end

  c.desc 'Show the currently timed project'
  c.command [:current, :c] do |current|
    current.action do

      # TODO: DRY
      puts Frecli::Table.horizontal(
        Frecli.project_current,
        { ID: :id,
          Name: :name,
          Minutes: :minutes }
      )
    end
  end

  c.default_command :current
end

desc 'Manage timers'
command [:timer, :timers, :t] do |c|
  c.desc 'List all timers'
  c.command [:all, :a] do |all|
    all.action do
      puts Frecli::Table.vertical(
        Frecli.timers,
        [ 'Project ID', 'State', 'Time', 'Date' ],
        [ -> (timer) { timer.project.id }, :state, :formatted_time, :date ]
      )
    end
  end

  c.desc 'Show a timer'
  c.arg :id, :required
  c.command [:show, :s] do |show|
    show.action do |_, _, args|
      project_id = args[0]


      # TODO: DRY
      puts Frecli::Table.horizontal(
        Frecli.timer(project_id),
        { ID: :id,
          State: :state,
          Time: :formatted_time,
          Description: :description }
      )
    end
  end

  c.desc 'Show the current timer'
  c.command [:current, :c] do |current|
    current.action do

      # TODO: DRY
      puts Frecli::Table.horizontal(
        Frecli.timer_current,
        { ID: :id,
          State: :state,
          Time: :formatted_time,
          Description: :description }
      )
    end
  end

  c.default_command :current
end



pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
